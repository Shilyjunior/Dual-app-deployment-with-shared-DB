---
- name: Check if Node.js is installed
  command: node --version
  register: nodejs_check
  ignore_errors: yes
  changed_when: false

- name: Install Node.js if not present
  block:
    - name: Install prerequisite packages
      package:
        name:
          - curl
          - epel-release
        state: present

    - name: Add Node.js repository
      shell: |
        curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
      args:
        creates: /etc/yum.repos.d/nodesource-el9.repo

    - name: Install Node.js
      package:
        name: nodejs
        state: present
  when: nodejs_check.rc != 0

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'
  loop:
    - "{{ node_app_dir }}/versions"
    - "{{ node_app_dir }}/shared"

- name: Copy Node.js app files
  copy:
    src: "../../../../apps/node-app/"
    dest: "{{ node_app_dir }}/versions/node-app-{{ node_app_version }}"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"

- name: Install Node.js dependencies
  npm:
    path: "{{ node_app_dir }}/versions/node-app-{{ node_app_version }}"
    state: present

- name: Install PM2 globally
  npm:
    name: pm2
    global: yes
    state: present

- name: Start Node.js application with PM2
  command: pm2 start "{{ node_app_dir }}/versions/node-app-{{ node_app_version }}/index.js" --name node-app
  become: yes
  become_user: "{{ app_user }}"

- name: Setup PM2 to start on boot
  command: pm2 startup
  become: yes
  become_user: "{{ app_user }}"

- name: Save PM2 configuration
  command: pm2 save
  become: yes
  become_user: "{{ app_user }}"
...