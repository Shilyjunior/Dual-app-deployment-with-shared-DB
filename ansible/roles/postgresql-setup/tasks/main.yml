---
- name: Install and configure PostgreSQL
  block:
    - name: Install PostgreSQL
      yum:
        name:
          - postgresql-server
          - postgresql-contrib
          - python3-psycopg2
        state: present

    - name: Initialize PostgreSQL database
      command: postgresql-setup initdb
      args:
        creates: /var/lib/pgsql/data/postgresql.conf

    - name: Configure PostgreSQL authentication
      lineinfile:
        path: /var/lib/pgsql/data/pg_hba.conf
        regexp: '^host\\s+all\\s+all\\s+127.0.0.1/32\\s+ident'
        line: 'host all all 127.0.0.1/32 md5'
        backup: yes

    - name: Start and enable PostgreSQL service
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Wait for PostgreSQL to be ready
      wait_for:
        port: 5432
        delay: 5
        timeout: 30

  rescue:
    - name: Display PostgreSQL setup error
      debug:
        msg: "PostgreSQL setup failed. Continuing with existing setup."

- name: Setup database and schema
  become: yes
  become_user: postgres
  block:
    - name: Create database if not exists
      shell: |
        psql -c "CREATE DATABASE {{ db_name }};" || true

    - name: Create user if not exists
      shell: |
        psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ db_password }}';" || true

    - name: Grant privileges
      shell: |
        psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_user }};"

    - name: Initialize schema
      shell: |
        psql -d {{ db_name }} -f /tmp/init.sql
      args:
        executable: /bin/bash

    - name: Verify setup
      shell: |
        psql -d {{ db_name }} -c "SELECT COUNT(*) FROM devs;"
      register: db_verify
      changed_when: false

    - name: Display verification result
      debug:
        msg: "Database contains {{ db_verify.stdout_lines[-1] | trim }} records"

- name: Create application user
  user:
    name: "{{ app_user }}"
    comment: "Application Deployment User"
    home: "/home/{{ app_user }}"
    shell: /bin/bash
    state: present
    create_home: yes
    system: no

- name: Create application directories with proper ownership
  file:
    path: "{{ apps_base_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'
...